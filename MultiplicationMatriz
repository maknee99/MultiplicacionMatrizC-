#include <iostream>
#include <vector>

using namespace std;

vector<vector<int>> crearMatriz();
void printMatriz(const vector<vector<int>>&);
vector<vector<int>> multiplicarMatrices(const vector<vector<int>>&, const vector<vector<int>>&);

int main() {
    vector<vector<int>> matriz1 = crearMatriz();
    cout << "Esta es la impresion de la primera matriz" << endl;
    printMatriz(matriz1);
    vector<vector<int>> matriz2 = crearMatriz();
    cout << "Esta es la impresion de la segunda matriz" << endl;
    printMatriz(matriz2);
    cout << "Esta es la multiplicacion de las dos matrices" << endl;
    vector<vector<int>> matrizResultante = multiplicarMatrices(matriz1, matriz2);
    printMatriz(matrizResultante);
    return 0;
}

vector<vector<int>> crearMatriz() {
    int filas, columnas;
    cout << "Elige cuantas filas quieres que tenga la matriz:" << endl;
    cin >> filas;
    cout << "Elige cuantas columnas quieres que tenga la matriz: " << endl;
    cin >> columnas;
    vector<vector<int>> matriz(filas, vector<int>(columnas));
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            matriz[i][j] = rand() % 100;
        }
    }
    return matriz;
}

void printMatriz(const vector<vector<int>>& matriz) {
    for (const auto& fila : matriz) {
        for (const auto& elemento : fila) {
            cout << elemento << " ";
        }
        cout << endl;
    }
}

vector<vector<int>> multiplicarMatrices(const vector<vector<int>>& matrizA, const vector<vector<int>>& matrizB) {
    vector<vector<int>> resultado(matrizA.size(), vector<int>(matrizB[0].size()));
    for (int i = 0; i < matrizA.size(); i++) {
        for (int j = 0; j < matrizB[0].size(); j++) {
            resultado[i][j] = 0;
            for (int k = 0; k < matrizA[0].size(); k++) {
                if (k >= matrizA[0].size() || k >= matrizB.size() || j >= matrizB[0].size()) {
                    continue;
                }
                resultado[i][j] += matrizA[i][k] * matrizB[k][j];
            }
        }
    }
    return resultado;
}
